from typing import Literal

import numpy as np
import numpy.typing as npt
import pytest

import tmatrix

LOG_LENGTH = 21
MIN_PROP = np.tile(np.array([7.10e10, 3.20e10, 2.71e03]), (LOG_LENGTH, 1))
FL_PROP = np.tile(np.array([2.700e09, 1.005e03, 1.000e02, 1.000e02]), (LOG_LENGTH, 1))
PHI = np.linspace(0.15, 0.25, LOG_LENGTH)
ALPHA = np.tile(np.array([0.9, 0.1]), (LOG_LENGTH, 1))
ALPHA_LENGTH_ARRAY = np.full((LOG_LENGTH,), 2, dtype=int)
ALPHA_LENGTH = 21
V = np.tile(np.array([0.9, 0.1]), (LOG_LENGTH, 1))
FREQUENCY = 1000
ANGLE = 90


@pytest.mark.parametrize(
    ("in_scenario", "expected_result"),
    [
        pytest.param(
            1,
            np.array(
                [
                    [5694.36878322, 3038.41723908, 3110.99680123, 2454.25],
                    [5671.00298887, 3025.7220966, 3100.61262782, 2445.725],
                    [5647.7692742, 3013.05064197, 3090.24968916, 2437.2],
                    [5624.66433131, 3000.4016954, 3079.9072199, 2428.675],
                    [5601.68491078, 2987.77407767, 3069.58445552, 2420.15],
                    [5578.82781933, 2975.16660964, 3059.28063213, 2411.625],
                    [5556.08991755, 2962.57811177, 3048.99498619, 2403.1],
                    [5533.46811778, 2950.00740364, 3038.72675429, 2394.575],
                    [5510.95938194, 2937.4533034, 3028.4751729, 2386.05],
                    [5488.56071953, 2924.91462735, 3018.23947811, 2377.525],
                    [5466.26918564, 2912.39018938, 3008.01890538, 2369.0],
                    [5444.08187902, 2899.87880047, 2997.81268932, 2360.475],
                    [5421.99594024, 2887.37926815, 2987.62006338, 2351.95],
                    [5400.00854986, 2874.89039602, 2977.44025965, 2343.425],
                    [5378.11692665, 2862.41098318, 2967.27250857, 2334.9],
                    [5356.31832592, 2849.93982369, 2957.11603867, 2326.375],
                    [5334.61003781, 2837.47570601, 2946.97007631, 2317.85],
                    [5312.98938569, 2825.01741249, 2936.8338454, 2309.325],
                    [5291.45372453, 2812.56371869, 2926.70656714, 2300.8],
                    [5270.00043939, 2800.11339291, 2916.58745976, 2292.275],
                    [5248.62694388, 2787.66519552, 2906.4757382, 2283.75],
                ]
            ),
            id="Dual porosity, mostly rounded",
        ),
        pytest.param(
            2,
            np.array(
                [
                    [5278.40315358, 2594.16237582, 2981.70924399, 2454.25],
                    [5244.30363434, 2567.46003072, 2967.2194086, 2445.725],
                    [5210.44033958, 2540.76804229, 2952.75499741, 2437.2],
                    [5176.80375903, 2514.07888179, 2938.3144249, 2428.675],
                    [5143.38465262, 2487.38491584, 2923.89610528, 2420.15],
                    [5110.17403425, 2460.67839223, 2909.49845166, 2411.625],
                    [5077.16315638, 2433.95142498, 2895.1198753, 2403.1],
                    [5044.34349547, 2407.19597839, 2880.75878476, 2394.575],
                    [5011.70673817, 2380.40385017, 2866.41358509, 2386.05],
                    [4979.24476822, 2353.56665341, 2852.08267703, 2377.525],
                    [4946.94965399, 2326.67579723, 2837.76445612, 2369.0],
                    [4914.81363659, 2299.72246608, 2823.45731185, 2360.475],
                    [4882.82911855, 2272.69759736, 2809.15962683, 2351.95],
                    [4850.98865299, 2245.59185734, 2794.86977586, 2343.425],
                    [4819.28493326, 2218.39561503, 2780.58612504, 2334.9],
                    [4787.71078299, 2191.09891378, 2766.30703081, 2326.375],
                    [4756.25914651, 2163.69144038, 2752.03083908, 2317.85],
                    [4724.92307965, 2136.16249125, 2737.75588416, 2309.325],
                    [4693.69574084, 2108.5009355, 2723.48048785, 2300.8],
                    [4662.57038254, 2080.69517418, 2709.20295838, 2292.275],
                    [4631.54034283, 2052.73309553, 2694.92158935, 2283.75],
                ]
            ),
            id="Dual porosity, little rounded",
        ),
        pytest.param(
            3,
            np.array(
                [
                    [5522.20361661, 2874.62232085, 3061.53800734, 2454.25],
                    [5494.28449015, 2856.7607026, 3049.57715288, 2445.725],
                    [5466.54156322, 2838.92640051, 3037.63921297, 2437.2],
                    [5438.96933656, 2821.11682225, 3025.72315176, 2428.675],
                    [5411.56243577, 2803.32936989, 3013.82793411, 2420.15],
                    [5384.31560537, 2785.56143811, 3001.95252523, 2411.625],
                    [5357.22370307, 2767.8104122, 2990.09589025, 2403.1],
                    [5330.28169424, 2750.07366622, 2978.25699386, 2394.575],
                    [5303.48464673, 2732.34856095, 2966.43479987, 2386.05],
                    [5276.82772577, 2714.63244186, 2954.62827085, 2377.525],
                    [5250.30618912, 2696.92263709, 2942.83636768, 2369.0],
                    [5223.91538246, 2679.21645523, 2931.05804918, 2360.475],
                    [5197.65073485, 2661.51118318, 2919.29227165, 2351.95],
                    [5171.50775446, 2643.80408385, 2907.53798848, 2343.425],
                    [5145.48202438, 2626.09239381, 2895.79414971, 2334.9],
                    [5119.56919859, 2608.37332089, 2884.05970159, 2326.375],
                    [5093.76499807, 2590.64404166, 2872.33358616, 2317.85],
                    [5068.06520708, 2572.90169881, 2860.61474078, 2309.325],
                    [5042.46566944, 2555.14339847, 2848.90209767, 2300.8],
                    [5016.96228506, 2537.36620736, 2837.19458347, 2292.275],
                    [4991.55100643, 2519.56714989, 2825.49111876, 2283.75],
                ]
            ),
            id="Mixed pores",
        ),
        pytest.param(
            4,
            np.array(
                [
                    [5362.44265349, 2699.22188826, 3008.17999122, 2454.25],
                    [5330.42433545, 2675.84679655, 2994.52687929, 2445.725],
                    [5298.62170248, 2652.49376764, 2980.89841901, 2437.2],
                    [5267.02676789, 2629.15762818, 2967.29322401, 2428.675],
                    [5235.63175657, 2605.83316249, 2953.70990813, 2420.15],
                    [5204.42909312, 2582.51510577, 2940.14708479, 2411.625],
                    [5173.41139074, 2559.19813709, 2926.60336635, 2403.1],
                    [5142.57144049, 2535.87687206, 2913.0773635, 2394.575],
                    [5111.90220121, 2512.54585511, 2899.56768455, 2386.05],
                    [5081.39678987, 2489.19955146, 2886.07293482, 2377.525],
                    [5051.0484723, 2465.83233869, 2872.59171596, 2369.0],
                    [5020.85065448, 2442.43849783, 2859.12262526, 2360.475],
                    [4990.79687404, 2419.0122039, 2845.66425498, 2351.95],
                    [4960.88079222, 2395.54751602, 2832.21519164, 2343.425],
                    [4931.09618616, 2372.03836677, 2818.7740153, 2334.9],
                    [4901.43694139, 2348.47855101, 2805.33929888, 2326.375],
                    [4871.89704473, 2324.86171385, 2791.90960736, 2317.85],
                    [4842.47057735, 2301.18133785, 2778.48349707, 2309.325],
                    [4813.15170806, 2277.43072931, 2765.05951489, 2300.8],
                    [4783.93468693, 2253.60300353, 2751.63619747, 2292.275],
                    [4754.81383893, 2229.69106896, 2738.21207045, 2283.75],
                ]
            ),
            id="Flat pores and cracks",
        ),
    ],
)
def test_tmatrix_porosity(
    in_scenario: Literal[1, 2, 3, 4],
    expected_result: npt.NDArray[np.float64],
):
    """Test that we get the expected result for tmatrix_porosity"""

    out_arr = np.zeros((LOG_LENGTH, 4))

    _ = tmatrix.tmatrix_porosity(
        out_np=out_arr,
        dim=LOG_LENGTH,
        mineral_property_np=MIN_PROP,
        fluid_property_np=FL_PROP,
        phi_vector_np=PHI,
        in_scenario=in_scenario,
        frequency=FREQUENCY,
        angle_of_sym_plane=ANGLE,
        per_inc_con=0.5,
        per_inc_any=0.5,
    )

    np.testing.assert_array_almost_equal(out_arr, expected_result)


def test_tmatrix_porosity_noscenario():
    """Test that we get the expected result for tmatrix_porosity_noscenario."""
    out_arr = np.zeros((LOG_LENGTH, 4))

    expected_result = np.array(
        [
            [5694.36878322, 3038.41723908, 3110.99680123, 2454.25],
            [5671.00298887, 3025.7220966, 3100.61262782, 2445.725],
            [5647.7692742, 3013.05064197, 3090.24968916, 2437.2],
            [5624.66433131, 3000.4016954, 3079.9072199, 2428.675],
            [5601.68491078, 2987.77407767, 3069.58445552, 2420.15],
            [5578.82781933, 2975.16660964, 3059.28063213, 2411.625],
            [5556.08991755, 2962.57811177, 3048.99498619, 2403.1],
            [5533.46811778, 2950.00740364, 3038.72675429, 2394.575],
            [5510.95938194, 2937.4533034, 3028.4751729, 2386.05],
            [5488.56071953, 2924.91462735, 3018.23947811, 2377.525],
            [5466.26918564, 2912.39018938, 3008.01890538, 2369.0],
            [5444.08187902, 2899.87880047, 2997.81268932, 2360.475],
            [5421.99594024, 2887.37926815, 2987.62006338, 2351.95],
            [5400.00854986, 2874.89039602, 2977.44025965, 2343.425],
            [5378.11692665, 2862.41098318, 2967.27250857, 2334.9],
            [5356.31832592, 2849.93982369, 2957.11603867, 2326.375],
            [5334.61003781, 2837.47570601, 2946.97007631, 2317.85],
            [5312.98938569, 2825.01741249, 2936.8338454, 2309.325],
            [5291.45372453, 2812.56371869, 2926.70656714, 2300.8],
            [5270.00043939, 2800.11339291, 2916.58745976, 2292.275],
            [5248.62694388, 2787.66519552, 2906.4757382, 2283.75],
        ]
    )

    tmatrix.tmatrix_porosity_noscenario(
        out_np=out_arr,
        out_N=LOG_LENGTH,
        mineral_property_np=MIN_PROP,
        fluid_property_np=FL_PROP,
        phi_vector_np=PHI,
        alpha_np=ALPHA,
        v_np=V,
        alpha_size_np=ALPHA_LENGTH_ARRAY,
        alpha_N=ALPHA_LENGTH,
        frequency=FREQUENCY,
        angle=ANGLE,
        inc_con_np=np.array([0.5]),
        inc_ani_np=np.array([0.5]),
        inc_con_N=1,
    )
    np.testing.assert_array_almost_equal(out_arr, expected_result)
